name: build

on:
  push:
    branches: [ master ]
  pull_request_target:
    branches: [ master ]

jobs:
  test:
    name: test this repository
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          key: docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
          restore-keys: |
            docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
            docker-layers-${{ hashFiles('Dockerfile') }}
      - name: update code owners
        uses: ./
        with:
          path: .github/CODEOWNERS.test
      - name: verify contents of generated file (file)
        run: |
          grep -q "^/.gitignore matthias.fax@gmail.com$" .github/CODEOWNERS.test
      - name: verify contents of generated file (folder)
        run: |
          grep -q "^/.github/\* matthias.fax@gmail.com" .github/CODEOWNERS.test
      - name: verify lack of granularity
        continue-on-error: true
        run: |
          grep -q "build.yml" .github/CODEOWNERS.test
          echo "granular=success" >> $GITHUB_ENV
      - name: fail if granularity is detected
        if: env.granular == 'success'
        run: |
          echo "::error:: the test file contained granular file references"
          exit 1
      - name: verify lack of username
        continue-on-error: true
        run: |
          grep -q "@matfax" .github/CODEOWNERS.test
          echo "username=success"  >> $GITHUB_ENV
      - name: fail if username is detected
        if: env.username == 'success'
        run: |
          echo "::error:: the generated file contained a username although the input was disabled"
          exit 1
      - uses: actions/upload-artifact@v3.1.1
        if: always()
        with:
          name: ${{ github.job }}-owners
          path: .github/CODEOWNERS.test
  username:
    name: test with username
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          key: docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
          restore-keys: |
            docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
            docker-layers-${{ hashFiles('Dockerfile') }}
      - name: update code owners
        uses: ./
        with:
          path: .github/CODEOWNERS.test
          username: true
      - name: verify contents of generated file (file)
        run: |
          grep -q "^/.gitignore @matfax$" .github/CODEOWNERS.test
      - name: verify contents of generated file (folder)
        run: |
          grep -q "^/.github/\* @matfax" .github/CODEOWNERS.test
      - name: verify lack of email address
        continue-on-error: true
        run: |
          grep -q "matthias.fax@gmail.com" .github/CODEOWNERS.test
          echo "email=success" >> $GITHUB_ENV
      - name: fail if email is detected
        if: env.email == 'success'
        run: |
          echo "::error:: the generated file still contained an email address"
          exit 1
      - name: verify lack of LICENSE glob
        continue-on-error: true
        run: |
          grep -q "LICENSE" .github/CODEOWNERS.test
          echo "license=success" >> $GITHUB_ENV
      - name: fail if license is detected
        if: env.license == 'success'
        run: |
          echo "::error:: the generated file contained a LICENSE glob"
          exit 1
      - uses: actions/upload-artifact@v3.1.1
        if: always()
        with:
          name: ${{ github.job }}-owners
          path: .github/CODEOWNERS.test
  granular:
    name: test with granular input
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          key: docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
          restore-keys: |
            docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
            docker-layers-${{ hashFiles('Dockerfile') }}
      - name: update code owners
        uses: ./
        with:
          distribution: 25
          granular: true
          path: .github/CODEOWNERS.test
      - name: verify contents of generated file (folder)
        continue-on-error: true
        run: |
          grep -q "^.github/[. \t]*matthias.fax@gmail.com" .github/CODEOWNERS.test
          echo "folder=success" >> $GITHUB_ENV
      - name: fail if folder is in owners list
        if: env.folder == 'success'
        run: |
          echo "::error:: the file contained a folder reference but it should not because of enabled granularity"
          exit 1
      - name: verify contents of generated file
        run: |
          grep -q "build.yml" .github/CODEOWNERS.test
      - uses: actions/upload-artifact@v3.1.1
        if: always()
        with:
          name: ${{ github.job }}-owners
          path: .github/CODEOWNERS.test
  invalid:
    name: test invalid
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2.3.4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: cache docker layers
        uses: satackey/action-docker-layer-caching@v0.0.8
        with:
          key: docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
          restore-keys: |
            docker-layers-${{ hashFiles('Dockerfile') }}-${{ hashFiles('entrypoint.sh') }}
            docker-layers-${{ hashFiles('Dockerfile') }}
      - name: update code owners
        uses: ./
        with:
          distribution: 101
          path: .github/CODEOWNERS.test
      - name: verify contents of generated file
        continue-on-error: true
        run: |
          grep -q ".gitignore[ \t]*matthias.fax@gmail.com" .github/CODEOWNERS.test
          echo "status=success" >> $GITHUB_ENV
      - name: verify contents of generated file (fallback)
        continue-on-error: true
        run: |
          grep -q ".gitignore[ \t]*matfax@users.noreply.github.com" .github/CODEOWNERS.test
          echo "status=success" >> $GITHUB_ENV
      - name: fail if either address is matched
        if: env.status == 'success'
        run: |
          echo "::error:: the expected owner could be found in the test file even though the distribution input was invalid"
          exit 1
      - uses: actions/upload-artifact@v3.1.1
        if: always()
        with:
          name: ${{ github.job }}-owners
          path: .github/CODEOWNERS.test
